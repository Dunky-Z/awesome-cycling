[{"content":"","date":"2024-09-07","id":0,"permalink":"/awesome-cycling/docs/social-forums/","summary":"","tags":[],"title":"社交与论坛（Social \u0026 Forums）"},{"content":"","date":"2024-09-07","id":1,"permalink":"/awesome-cycling/docs/news-media/","summary":"","tags":[],"title":"新闻与媒体（News \u0026 Media）"},{"content":"","date":"2024-09-27","id":2,"permalink":"/awesome-cycling/docs/training-fitness/","summary":"","tags":[],"title":"训练与健康管理（Training \u0026 Fitness）"},{"content":"","date":"2024-09-27","id":3,"permalink":"/awesome-cycling/docs/equipment-components/","summary":"","tags":[],"title":"设备与零配件（Equipment \u0026 Components）"},{"content":"","date":"2024-09-07","id":4,"permalink":"/awesome-cycling/docs/race-datatracking/","summary":"","tags":[],"title":"赛事与数据跟踪（Race \u0026 Data Tracking）"},{"content":"","date":"2024-09-07","id":5,"permalink":"/awesome-cycling/docs/routes-navigation/","summary":"","tags":[],"title":"路线与导航工具（Routes \u0026 Navigation）"},{"content":"","date":"2024-09-07","id":6,"permalink":"/awesome-cycling/docs/strava-garmin/","summary":"","tags":[],"title":"Strava 和 Garmin 相关工具（Strava \u0026 Garmin Tools）"},{"content":"Strava Statistics 部署文档 Strava Statistics 是一个自托管工具，利用 Strava 数据生成个人运动统计，支持 Docker 部署，提供丰富的可视化分析。下面介绍如何使用 Docker Compose 部署。\n申请 Strava 的 API 权限 在ZwiftOffline中也需要用到 API 权限，因为不同应用程序也不冲突，懒得再重新申请，所以以下填的信息使用的 ZwiftOffline 的 API 权限。\n登录Strava，申请 API，获取Client ID和Client Secret。\n填写内容可以参考下图：\n其中授权回调域填写：launcher.zwift.com\n申请完成后会得到下面的信息：\n将下面链接中的client_id值换成上图中的客户 ID，然后浏览器中访问这个链接：\nhttp://www.strava.com/oauth/authorize?client_id=xxxxxxx\u0026amp;response_type=code\u0026amp;redirect_uri=http://localhost/exchange_token\u0026amp;approval_prompt=force\u0026amp;scope=activity:read_all\r点击授权：\n此时跳转到一个无法访问的网页，将地址栏中的code值记录下来，后面需要用到：\n需要用这个code发起一个 cURL 请求得到refresh_token，具体做法是在命令行终端中执行下面的命令：\ncurl -X POST https://www.strava.com/oauth/token \\ -F client_id=YOURCLIENTID \\ -F client_secret=YOURCLIENTSECRET \\ -F code=AUTHORIZATIONCODE \\ -F grant_type=authorization_code\rclient_id值替换为申请得到的客户ID client_secret值替换为申请得到的客户端密钥 code替换为上一步浏览器中得到的code 执行成功后可以得到下面的返回信息，需要将返回值中的refresh_token和access_token记录下来，后面需要用到：\n{\u0026#34;token_type\u0026#34;:\u0026#34;Bearer\u0026#34;,\u0026#34;expires_at\u0026#34;:1740213400,\u0026#34;expires_in\u0026#34;:21600,\u0026#34;refresh_token\u0026#34;:\u0026#34;123456789123456789\u0026#34;,\u0026#34;access_token\u0026#34;:\u0026#34;123456789123456789\u0026#34;,\u0026#34;athlete\u0026#34;:{\u0026#34;id\u0026#34;:117756825,\u0026#34;username\u0026#34;:\u0026#34;dunky_zhang\u0026#34;,\u0026#34;resource_state\u0026#34;:2,\u0026#34;firstname\u0026#34;:\u0026#34;Dominic\u0026#34;,\u0026#34;lastname\u0026#34;:\u0026#34;Zhang\u0026#34;,\u0026#34;bio\u0026#34;:\u0026#34;骑行小白\u0026#34;,\u0026#34;city\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;state\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;country\u0026#34;:null,\u0026#34;sex\u0026#34;:\u0026#34;M\u0026#34;,\u0026#34;premium\u0026#34;:true,\u0026#34;summit\u0026#34;:true,\u0026#34;created_at\u0026#34;:\u0026#34;2023-05-10T13:54:32Z\u0026#34;,\u0026#34;updated_at\u0026#34;:\u0026#34;2025-02-06T05:29:52Z\u0026#34;,\u0026#34;badge_type_id\u0026#34;:1,\u0026#34;weight\u0026#34;:66.0,\u0026#34;profile_medium\u0026#34;:\u0026#34;https://dgalywyr863hv.cloudfront.net/pictures/athletes/117756825/32138099/2/medium.jpg\u0026#34;,\u0026#34;profile\u0026#34;:\u0026#34;https://dgalywyr863hv.cloudfront.net/pictures/athletes/117756825/32138099/2/large.jpg\u0026#34;,\u0026#34;friend\u0026#34;:null,\u0026#34;follower\u0026#34;:null}}#\rDocker Compose 部署 Strava Statistics 创建目录用于存放 Strava Statistics 的配置文件\nmkdir statistics-for-strava cd statistics-for-strava\r创建 docker-compose.yml 文件\ntouch docker-compose.yml\r编辑 docker-compose.yml 文件，填入以下内容：\nservices: app: image: robiningelbrecht/strava-statistics:latest volumes: - ./build:/var/www/build - ./storage/database:/var/www/storage/database - ./storage/files:/var/www/storage/files env_file: ./.env ports: - 8080:8080 environment: - PUID=1000 - PGID=1000 - TZ=Asia/Shanghai # 因为Strava的API需要代理访问，所以下面设置了我的代理地址，请你根据自己的代理地址进行设置 - http_proxy=http://192.168.1.9:7890 - https_proxy=http://192.168.1.9:7890 - all_proxy=socks5://192.168.1.9:7891\r创建 .env 文件\ntouch .env\r编辑 .env 文件，填入以下内容：\n# 应用程序将托管的URL。此URL将用于清单文件中。 # 这将允许您将Web应用程序作为原生应用程序安装到您的设备上。 MANIFEST_APP_URL=http://localhost:8080/ # 您的Strava应用程序的客户端ID。 STRAVA_CLIENT_ID=xxxxxxx # 您的Strava应用程序的客户端密钥。 STRAVA_CLIENT_SECRET=xxxxxxxxxxxxxx # 您的Strava应用程序的刷新令牌。在上一步获取到的 STRAVA_REFRESH_TOKEN=xxxxxxxxxxxxxx # Strava API有限速限制（https://github.com/robiningelbrecht/strava-statistics/wiki）， # 为了确保我们不会达到限速，我们希望限制每次导入处理的新活动数量。 # 考虑到每天有1000次请求限制，并且导入一个新活动最多可能需要3次API调用，250应该是一个安全的数字。 NUMBER_OF_NEW_ACTIVITIES_TO_PROCESS_PER_IMPORT=250 # 定期运行导入和HTML构建的计划。留空以禁用定期导入。 # 默认计划为每天凌晨04:05运行一次。如果您不知道什么是cron表达式，请勿更改此项。 # 请确保不要过于频繁地运行导入，以避免达到Strava API的限速。每天一次应该足够。 IMPORT_AND_BUILD_SCHEDULE=\u0026#34;5 4 * * *\u0026#34; # 设置用于计划的时区 # 有效的时区可以在此处找到（TZ标识符列）：https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List TZ=Asia/Shanghai # 允许的选项：en_US、fr_FR 或 nl_BE LOCALE=en_US # 允许的选项：metric（公制）或 imperial（英制） UNIT_SYSTEM=metric # 渲染应用程序时使用的时间格式 # 允许的格式：24 或 12（包括AM和PM） TIME_FORMAT=24 # 渲染应用程序时使用的日期格式 # 允许的格式：DAY-MONTH-YEAR（日-月-年）或 MONTH-DAY-YEAR（月-日-年） DATE_FORMAT=DAY-MONTH-YEAR # 要导入的运动类型。留空以导入所有运动类型。 # 通过此列表，您还可以决定运动类型的渲染顺序。 # 完整的允许选项列表可在以下地址找到：https://github.com/robiningelbrecht/strava-statistics/wiki/Supported-sport-types/ SPORT_TYPES_TO_IMPORT=\u0026#39;[]\u0026#39; # 您的生日。需要用于计算心率区间。 ATHLETE_BIRTHDAY=1999-01-01 # 体重历史（单位为千克或磅，取决于UNIT_SYSTEM）。需要用于计算相对功率重量比（w/kg）。 # 查看更多信息：https://github.com/robiningelbrecht/strava-statistics/wiki ATHLETE_WEIGHTS=\u0026#39;{ \u0026#34;1970-01-01\u0026#34;: 68 }\u0026#39; # FTP（功能阈值功率）历史。需要用于计算活动压力水平。 # 查看更多信息：https://github.com/robiningelbrecht/strava-statistics/wiki FTP_VALUES=\u0026#39;{ \u0026#34;2024-12-12\u0026#34;: 235 }\u0026#39; # 包含ntfy主题的完整URL。此主题将用于在新的HTML构建运行时通知您。 # 留空以禁用通知。 NTFY_URL=\u0026#39;\u0026#39; # 在导入期间要跳过的活动ID数组。 # 这允许您在导入时跳过特定活动。 ACTIVITIES_TO_SKIP_DURING_IMPORT=\u0026#39;[]\u0026#39; # 创建/拥有由strava-statistics管理的文件的UID和GID # 可能仅在Linux主机上需要，详见Wiki中的文件权限部分 #PUID= #PGID=\r开始导入数据：\n启动容器\ndocker-compose up -d\r导入数据\ndocker compose exec app bin/console app:strava:import-data docker compose exec app bin/console app:strava:build-files\r导入过程非常非常慢，因为需要挨个数据获取，并且很容易出错，如果出错了，需要先关闭容器，然后重新导入。以下是导入成功的截图： 访问 localhost:8080 查看数据\n常见问题 401 Unauthorized .env中的STRAVA_REFRESH_TOKEN可能过期，需要重新获取。又或者压根就忘记了获取refresh_token，需要重新获取。\nFailed to connect to nominatim.openstreetmap.org 因为需要生成一些地图热点信息，所以需要访问nominatim.openstreetmap.org，所以需要配置代理。\nTring to calculate the relative power for activity 因为需要计算相对功率重量比（w/kg），所以需要配置体重历史。如果发现某个活动的时间点没有配置体重信息就会报这个错。看看.env中的ATHLETE_WEIGHTS是否配置正确。我建议直接修改成我提供的数据，也就是从1970年开始都是当前的体重。因为我尝试配置了自己的体重历史，但是一直报错，所以直接改成了这个。\nLooks like you still need to import your strava data 如果你只执行了docker-compose up -d，而没有执行导入数据的命令，那么就会出现这个错误。需要执行导入数据的命令。如果你已经导入成功了，如果还报这个错，就需要重启一下容器。\n","date":"2025-02-20","id":7,"permalink":"/awesome-cycling/docs/strava-garmin/strava-statistics/","summary":"Strava Statistics 部署文档 Strava Statistics 是一个自托管工具，利用 Strava 数据生成个人运动统计，支持 Docker 部署，提供丰富的可视化分析。下面介绍如何使用 Docker Compose 部署。\n申请 Strava 的 API 权限 在ZwiftOffline中也需要用到 API 权限，因为不同应用程序也不冲突，懒得再重新申请，所以以下填的信息使用的 ZwiftOffline 的 API 权限。","tags":[],"title":"Strava Statistics"},{"content":"ZwiftOffline是一个开源社区自制的 Zwift 的 server 端，可以在没有网络的情况下进行 Zwift 课程或路线训练，多平台支持。\n安装 ZwiftOffline 从GitHub Release 页面下载最新的 zoffline 发布版。 找一个目录用于运行 Zwift offline，我新建了一个zwiftoffline目录，保存刚刚下载的exe文件，然后运行你下载的 zoffline.exe。一旦运行，zoffline 会在其所在的相同文件夹中创建一个storage目录，用以保存你的 Zwift 进度。生成storage目录后，按Ctrl+C先关闭 zoffline，稍后还有其他配置。 前往Zwift 官网，拉到页面底部，可以看到安装链接，安装 Zwift 软件。记住安装的路径，我安装在了C:\\Program Files (x86)\\Zwift。 运行 Zwift，这时候客户端会开始更新，因为安装的只是一个登录器，游戏本体还需要下载。一定要安装之后就执行这一步，因为后续的配置会改变网络配置，导致无法下载游戏本体。 从GitHub Rlease下载配置脚本等文件zoffline-helper.zip，将其也解压到zwiftoffline目录。 进入zwiftoffline/zoffline-helper目录，右键点击configure_client.bat，选择以管理员身份运行。这个脚本会自动配置 zoffline，以便你可以在本地运行 Zwift。期间会弹窗让你选择Zwift目录，就是之前需要记住的安装目录： 最终运行完的结果如下： 进入zwiftoffline目录，双击zoffline_1.0.140279.exe，运行 zoffline。 启动原版 Zwift 程序，如果显示的页面还是原来 Zwift 的登录页面，看看是不是开了代理，关闭代理再试试。 下图是官方原版登录界面，如果显示这个页面说明配置失败： 将输入法切换为微软英文输入法，点击Start Zwift即可开始游戏。如果是搜狗输入法将会卡在登录页面。 获取个人原来的 Zwift 资料信息 如果不配置这一项，那么使用 Zwift offline 骑行的时候，会显示你的信息是一个新的账号，而不是你原来的账号。\n在登录页面可以进入设置：\n填写邮箱和密码，勾选所有选项，点击 Submit 即可：\n这样再登录到 Zwift 时就是原来的账号了。\n链接 Strava 上传活动 登录Strava，申请 API，获取Client ID和Client Secret。\n填写内容可以参考下图：\n其中授权回调域填写：launcher.zwift.com\n申请完成后会得到下面的信息：\n在登录页面可以进入设置，填写得到的Client ID和Client Secret。\n右击管理员运行zoffline-helper/disable_zoffline.bat，这一步把hosts的配置都清除。\n命令行里运行zoffline-helper/strava_auth.exe --client-id CLIENT_ID --client-secret CLIENT_SECRET，把CLIENT_ID和CLIENT_SECRET替换成你的strava应用的client id和client secret。\n浏览器打开localhost:8000授权访问。\n把目录中生成的strava_token.txt移动到目录storage/1下。\n右击管理员运行zoffline-helper/configure_client.bat，重新配置hosts。\n上传训练课程 虽然Zwift有很多训练课程，但是我还是习惯在Intervals ICU上创建好自己的课程，然后上传到Zwift。虽然Intervals ICU上的课程可以直接同步到Zwift，但是单机版的没法同步这些课程，所以只能手动上传。\n具体如何创建课程我就不多说了，这里假设你已经有了一系列.zwo训练课程文件，那么你只需要将其保存到Documents/Zwift/Workouts/1目录下即可：\n注意哦，不是运行目录下的zwiftoffline\\storage\\1\\customworkouts哦，开始我自作聪明把课程放到这个目录下，结果发现上传不了，后来才发现是放错了。\n常见问题 卡在蓝色登录界面 进程管理中关闭Zwift，输入法需要切换为微软英文输入法重新登录：\n配置Zwiftoffline后无法更新Zwift 因为configure_client.bat会修改Hosts文件，导致无法连接到Zwift服务器，所以在更新Zwift时需要先关闭zoffline，然后再更新。可以进入zwiftoffline/zoffline-helper目录，右键点击disable_zoffline.bat，选择以管理员身份运行，可以清除网络配置，然后再打开Zwift开启更新。\n无法自动上传活动到Strava ","date":"2025-02-09","id":8,"permalink":"/awesome-cycling/docs/training-fitness/zwiftoffline/","summary":"ZwiftOffline是一个开源社区自制的 Zwift 的 server 端，可以在没有网络的情况下进行 Zwift 课程或路线训练，多平台支持。\n安装 ZwiftOffline 从GitHub Release 页面下载最新的 zoffline 发布版。 找一个目录用于运行 Zwift offline，我新建了一个zwiftoffline目录，保存刚刚下载的exe文件，然后运行你下载的 zoffline.exe。一旦运行，zoffline 会在其所在的相同文件夹中创建一个storage目录，用以保存你的 Zwift 进度。生成storage目录后，按Ctrl+C先关闭 zoffline，稍后还有其他配置。 前往Zwift 官网，拉到页面底部，可以看到安装链接，安装 Zwift 软件。记住安装的路径，我安装在了C:\\Program Files (x86)\\Zwift。 运行 Zwift，这时候客户端会开始更新，因为安装的只是一个登录器，游戏本体还需要下载。一定要安装之后就执行这一步，因为后续的配置会改变网络配置，导致无法下载游戏本体。 从GitHub Rlease下载配置脚本等文件zoffline-helper.","tags":[],"title":"ZwiftOffline"},{"content":"AI Bike Fitting是一个免费的Fitting工具，仅需拍摄上传一段公路车骑行视频，AI自动分析姿势并给出建议。\n使用方法 拍摄角度：拍摄镜头位于公路车正侧面，左右均可，拍摄一段20秒内的视频。 画面构成：保持画面中只出现一个人和一辆车，需要拍到人和车的全身。 拍摄环境：可以把车架设在骑行台拍摄，手机和骑行台尽量摆放水平。也可以直接拍摄路面骑行实况，需要拍摄到车辆的前后轮。 骑行姿势：骑行姿势放轻松，目视前方，踏频稳定，不站立摇车，手不离把。没穿锁鞋的情况下，脚不要在脚踏上移动位置。 画面质量：保持光线良好，拍摄画面尽量不要出现拖影和模糊，也可使用慢动作模式拍摄。 视频处理：截取骑行姿势最稳定的一段片段，上传前可用视频编辑类APP先剪裁掉有干扰的片段，为减少服务器资源占用，目前限制上传容量为30MB。 上传视频：上传视频后，AI会自动分析姿势并给出建议，建议在上传后等待几分钟，AI分析完成后会有提示。 ","date":"2024-09-27","id":9,"permalink":"/awesome-cycling/docs/training-fitness/ai-bike-fitting/","summary":"AI Bike Fitting是一个免费的Fitting工具，仅需拍摄上传一段公路车骑行视频，AI自动分析姿势并给出建议。\n使用方法 拍摄角度：拍摄镜头位于公路车正侧面，左右均可，拍摄一段20秒内的视频。 画面构成：保持画面中只出现一个人和一辆车，需要拍到人和车的全身。 拍摄环境：可以把车架设在骑行台拍摄，手机和骑行台尽量摆放水平。也可以直接拍摄路面骑行实况，需要拍摄到车辆的前后轮。 骑行姿势：骑行姿势放轻松，目视前方，踏频稳定，不站立摇车，手不离把。没穿锁鞋的情况下，脚不要在脚踏上移动位置。 画面质量：保持光线良好，拍摄画面尽量不要出现拖影和模糊，也可使用慢动作模式拍摄。 视频处理：截取骑行姿势最稳定的一段片段，上传前可用视频编辑类APP先剪裁掉有干扰的片段，为减少服务器资源占用，目前限制上传容量为30MB。 上传视频：上传视频后，AI会自动分析姿势并给出建议，建议在上传后等待几分钟，AI分析完成后会有提示。 ","tags":[],"title":"AI Bike Fitting"},{"content":"ZwifterBikes 是一个查询 Zwift 游戏中自行车的数据的网站，可以查询自行车的重量、空气动力学系数等信息。设定个人体能数据后，可以计算出不同自行车在不同地图中的性能表现。\n使用方式 进入网站后右侧边栏点击Rider，配置个人的基本信息：\n本次骑行的功率 个人的FTP 体重 身高 主要就是第一项，是你准备本次骑行用多大功率去骑。\n当然有时候骑比赛，不会开启ERG，功率就会有大幅的变化，比如上坡功率大，下坡功率小，那么就可以拖动Pacing这个滑杆，模拟动态变化，表示你准备在哪个功率区间去骑。\n点击Bike，筛选出车辆类型，以及当前可购买的车：\nLevel表示Zwift中的等级，有的车只有打到特定等级才能购买 Drops表示你在Zwift中汗水余额，也是游戏中的货币，能筛选出你能买得起的车 车辆类型筛选，一般勾选大组车，除非你有特殊需求如果你不想购买新车，可以勾选Only show items i own，只选车库已有的车 完成基础配置后就可以根据地图选车了，点击Route，根据一些条件筛选出你准备骑的路线。\n通常最常使用的是用关键词搜索，比如想要找Road to Sky这条路线，在最下面的文本框中输入road，或者sky，那么在最上面的下拉框中将只显示带有road的路线。\n也可以根据路线的情况筛选，比如Road to Sky爬升有1000+，那么可以拖动Elevation滑杆到1000M，也能筛选出来。\n当你选择一条路线后，右侧将会自动计算出适合这条路线并满足你条件的所有车架与轮组。这些组合是以你当前条件下的最优解，每个组合右上角有骑完这条路线的预计时间以及能量消耗。你可以再根据自己的情况选择是买新车，还是用已有的装备。\n","date":"2024-09-27","id":10,"permalink":"/awesome-cycling/docs/equipment-components/zwifterbikes/","summary":"ZwifterBikes 是一个查询 Zwift 游戏中自行车的数据的网站，可以查询自行车的重量、空气动力学系数等信息。设定个人体能数据后，可以计算出不同自行车在不同地图中的性能表现。\n使用方式 进入网站后右侧边栏点击Rider，配置个人的基本信息：\n本次骑行的功率 个人的FTP 体重 身高 主要就是第一项，是你准备本次骑行用多大功率去骑。\n当然有时候骑比赛，不会开启ERG，功率就会有大幅的变化，比如上坡功率大，下坡功率小，那么就可以拖动Pacing这个滑杆，模拟动态变化，表示你准备在哪个功率区间去骑。\n点击Bike，筛选出车辆类型，以及当前可购买的车：\nLevel表示Zwift中的等级，有的车只有打到特定等级才能购买 Drops表示你在Zwift中汗水余额，也是游戏中的货币，能筛选出你能买得起的车 车辆类型筛选，一般勾选大组车，除非你有特殊需求如果你不想购买新车，可以勾选Only show items i own，只选车库已有的车 完成基础配置后就可以根据地图选车了，点击Route，根据一些条件筛选出你准备骑的路线。","tags":[],"title":"ZwifterBikes"},{"content":"xingzhe-export-gpx 可以将行者运动App的数据导出为GPX文件，方便在其他平台上查看和分析。\n下载编译 下载源码：\ngit clone https://github.com/weaming/xingzhe-export-gpx.git cd xingzhe-export-gpx\ryarn; npm install typescript yarn build\r获取cookie 登录行者 点击右上角用户名进入个人主页 F12打开浏览器开发者工具 点击开发者工具“网络”选项卡 刷新页面 点击任意的网络请求，如get_user_info 点击请求的“标头” 往下翻，翻到Cookie，复制Cookie的所有内容，右击即可复制 获取UserID 还是刚刚的页面，切换到“标头”旁边的预览 鼠标点击预览中的内容，Ctrl+F打开搜索框 搜索userid，即可找到自己的userid 眼尖的话，其实第二个请求里也有userid信息，都可以。 配置config 将上面获取到的cookie和userid填入config.js中。\nconst xingzhe_prefix = \u0026#39;https://www.imxingzhe.com\u0026#39; const user_month_info = \u0026#39;/api/v4/user_month_info/\u0026#39; // 选择下载年份 const year = \u0026#39;2023\u0026#39; // 填写个人user_id const user_id = \u0026#39;6413500\u0026#39; // 填写个人xingzhe cookie, https://imxingzhe.com const xingzhe_cookie = \u0026#39;\u0026#39; module.exports = { xingzhe_prefix, user_month_info, year, user_id, xingzhe_cookie, }\r注意事项 每次只能下载一年的数据，每次下载都会覆盖上一次下载结果，所以请下载下一年的数据时，先把数据复制出来。 导入Strava就不用多介绍了，Strava主页右上角的+号，上传文件即可。 Strava上传GPX文件好像一天只能上传30个左右，如果数据很多的话就比较蛋疼了。会提示超过上传限制，请稍后再试。 ","date":"2024-09-19","id":11,"permalink":"/awesome-cycling/docs/routes-navigation/xingzhe-export-gpx/","summary":"xingzhe-export-gpx 可以将行者运动App的数据导出为GPX文件，方便在其他平台上查看和分析。\n下载编译 下载源码：\ngit clone https://github.com/weaming/xingzhe-export-gpx.git cd xingzhe-export-gpx\ryarn; npm install typescript yarn build\r获取cookie 登录行者 点击右上角用户名进入个人主页 F12打开浏览器开发者工具 点击开发者工具“网络”选项卡 刷新页面 点击任意的网络请求，如get_user_info 点击请求的“标头” 往下翻，翻到Cookie，复制Cookie的所有内容，右击即可复制 获取UserID 还是刚刚的页面，切换到“标头”旁边的预览 鼠标点击预览中的内容，Ctrl+F打开搜索框 搜索userid，即可找到自己的userid 眼尖的话，其实第二个请求里也有userid信息，都可以。 配置config 将上面获取到的cookie和userid填入config.","tags":[],"title":"xingzhe-export-gpx"},{"content":"功能介绍 GCW and Strava Kudo All 是一个浏览器插件，用于在Strava网站或Garmin Connect网站上一键点赞好友的运动记录。\n使用方法 前往Chrome应用商店安装GCW and Strava Kudo All即可：\n安装成功后，会在菜单栏显示一个点赞按钮，点击后即可为好友的运动记录一键点赞，确保友谊的小破车不会打翻。\n需要注意的是，因为Strava的活动记录是懒加载的，所谓懒加载就是它只加载部分好友活动，只有你往下翻才会继续加载一些活动，点赞只会点赞已经加载的活动，所以你想要给更多人点赞，需要继续下翻页面。\n","date":"2024-09-18","id":12,"permalink":"/awesome-cycling/docs/strava-garmin/gcw-and-strava-kudo-all/","summary":"功能介绍 GCW and Strava Kudo All 是一个浏览器插件，用于在Strava网站或Garmin Connect网站上一键点赞好友的运动记录。\n使用方法 前往Chrome应用商店安装GCW and Strava Kudo All即可：\n安装成功后，会在菜单栏显示一个点赞按钮，点击后即可为好友的运动记录一键点赞，确保友谊的小破车不会打翻。\n需要注意的是，因为Strava的活动记录是懒加载的，所谓懒加载就是它只加载部分好友活动，只有你往下翻才会继续加载一些活动，点赞只会点赞已经加载的活动，所以你想要给更多人点赞，需要继续下翻页面。","tags":[],"title":"GCW and Strava Kudo All"},{"content":"GearAutomator 是XiaoSiHwang开发的一款可以生成 Strava 运动热图以及天气卡片的工具。\n同步 Strava 数据 GearAutomator 是一个可以生成 Strava 运动热图和天气卡片的工具，访问 GearAutomator，点击的Connect with Strava按钮，然后输入 Strava 的用户名和密码登录。\n根据运动数据量不同，生成时间会有所不同，请勿关闭页面，等待生成完成。Strava 的 API 限制很严格，同步数据很慢，连接上 Strava 之后，建议干其他事情，等待数据同步完成，不用频繁刷新页面。我第一次同步数据不知道花了多久一直没有显示热图，以为这个工具失效了，后来某一天再次访问，发现热图已经生成了。\n查看热图 Zwift 虚拟骑行也会使用真实的 GPX 数据，所以在热力地图中也能看到有轨迹，虚拟骑行会用紫色轨迹表示，真实骑行会用绿色轨迹表示。图中紫色轨迹就是巴黎香街冲刺。绿色轨迹是一次路骑。\n配置天气卡片 Strava 订阅用户可以生成每次运动的天气卡片，可以在运动简介中看到这次运动时的天气情况，如图所示：\n没有订阅的用户也可以通过这个工具来生成，在天气配置页面，开启即可：\n当下次有新的数据同步到 Strava 时，会自动在标题下面生成天气信息，如图所示：\n如果你想自定义天气卡片的样式，可以在天气卡片配置页面进行设置，比如将英文转换为中文：\n你可以直接复制下面的文本，替换即可：\n温度: ${temperature} 体感温度: ${apparentTemperature} 天气状况: ${skyCon} 湿度: ${humidity} 气压: ${pressure} 云量: ${cloudRate} 风速: ${windSpeed} 能见度: ${visibility} 空气质量: 空气质量指数(AQI): ${aqi} 细颗粒物(PM2.5): ${pm25} 可吸入颗粒物(PM10): ${pm10} 臭氧(O3): ${o3} 二氧化硫(SO2): ${so2} 二氧化氮(NO2): ${no2} 一氧化碳(CO): ${co} 紫外线强度(UV): ${uv} 地面接收的太阳辐射(DSWRF): ${dswrf}\r温度: ${startTemperature} - ${endTemperature} 体感温度: ${startApparentTemperature} - ${endApparentTemperature} 天气状况: ${startSkyCon} - ${endSkyCon} 湿度: ${startHumidity} - ${endHumidity} 气压: ${startPressure} - ${endPressure} 云量: ${startCloudRate} - ${endCloudRate} 风速: ${startWindSpeed} - ${endWindSpeed} 能见度: ${startVisibility} - ${endVisibility} 空气质量: 空气质量指数(AQI): ${startAqi} - ${endAqi} 细颗粒物(PM2.5): ${startPM25} - ${endPM25} 可吸入颗粒物(PM10): ${startPM10} - ${endPM10} 臭氧(O3): ${startO3} - ${endO3} 二氧化硫(SO2): ${startSO2} - ${endSO2} 二氧化氮(NO2): ${startNO2} - ${endNO2} 一氧化碳(CO): ${startCO} - ${endCO} 紫外线强度(UV): ${startUV} - ${endUV} 地面接收的太阳辐射(DSWRF): ${startDswrf} - ${endDswrf}\rStrava IFTTT 自动化工具 该功能可以根据设定的一些场景条件自动触发一些Strava的操作。点击左侧菜单栏Strava IFTTT，点击新建，可以看到如下页面，在此可以创建自己的自动化规则。接下来我会举例介绍该功能的使用。\n骑行运动时，自动在标题前添加骑行表情 表情包可以从getemoji网站查找复制粘贴进去。\n填写自动化名称：标题添加骑行图标 设置字段条件：运动类型-包含-骑行，虚拟骑行，山地骑行，公路骑行 点击新增Action 选择：在原始标题前 文本框中输入复制来的自行车表情包 关闭文本框 滑动页面底部，点击保存 显示下图表示创建成功 当我们有新的骑行运动数据产生时，会自动在标题前添加骑行表情。\n配速达到4分/km时，将Strava的装备设置为指定跑鞋 填写自动化名称：配速小于4分换跑鞋 设置字段条件：平均配速 - 小于 - 4 点击新增Action 选择：装备 - 选择想要切换的装备 滑动页面底部，点击保存 当下次新增的跑步数据配速小于4分时，会自动将装备设置为指定的跑鞋。\n","date":"2024-09-18","id":13,"permalink":"/awesome-cycling/docs/strava-garmin/gearautomator/","summary":"GearAutomator 是XiaoSiHwang开发的一款可以生成 Strava 运动热图以及天气卡片的工具。\n同步 Strava 数据 GearAutomator 是一个可以生成 Strava 运动热图和天气卡片的工具，访问 GearAutomator，点击的Connect with Strava按钮，然后输入 Strava 的用户名和密码登录。\n根据运动数据量不同，生成时间会有所不同，请勿关闭页面，等待生成完成。Strava 的 API 限制很严格，同步数据很慢，连接上 Strava 之后，建议干其他事情，等待数据同步完成，不用频繁刷新页面。我第一次同步数据不知道花了多久一直没有显示热图，以为这个工具失效了，后来某一天再次访问，发现热图已经生成了。","tags":[],"title":"GearAutomator"},{"content":"Intervals.icu 网站介绍及使用指南 概述 intervals.icu 是一个专为运动员和教练设计的训练管理平台，主要服务于骑行和跑步等耐力运动。它通过深度数据分析和图表展示，帮助用户跟踪和优化训练计划、监控体能变化，并提供详细的性能分析。网站集成了多种运动数据源，能够将 Strava 等平台的数据导入并进一步分析。\n功能介绍 训练分析\n功率曲线分析：Intervals.icu 可以从功率计或智能骑行台获取数据，生成用户的功率曲线，帮助评估不同时间段的表现。 训练负荷管理（CTL/ATL/TSB）：通过计算用户的累积训练负荷（Chronic Training Load, CTL）、急性训练负荷（Acute Training Load, ATL）和训练压力平衡（Training Stress Balance, TSB），平台能够评估当前体能状况和疲劳水平，并提供调整训练的建议。 心率和功率区间管理\n该网站允许用户根据心率和功率区间来规划训练并监控每次训练的实际完成情况，帮助用户更精确地调整训练强度。 个性化训练计划\n用户可以制定长期或短期的训练计划，设定目标和预期，并跟踪每一次训练的达成情况。Intervals.icu 还支持根据过去的数据生成个性化的训练建议。 数据可视化\n网站提供多种形式的图表和图形展示，帮助用户理解训练数据。你可以查看不同维度的数据，包括功率、心率、速度、步频等，所有数据都可以直观地在图表上展示。 康复与健康监测\nIntervals.icu 通过分析运动量，结合用户的主观感受（如疲劳和睡眠情况），为恢复期的训练计划提供建议，防止过度训练导致伤病。 与第三方工具的集成\n支持与 Strava 无缝集成，用户可以将 Strava 上的骑行或跑步记录自动同步到 Intervals.icu 上进行详细分析。此外，用户可以导入来自 Garmin、Zwift、TrainerRoad 等平台的数据。 使用指南 注册与账号关联\n访问 intervals.icu，通过 Strava 登录或创建一个独立账户。首次登录后，用户可以选择同步 Strava 数据，网站会导入过去的训练记录。 你也可以选择以文件的形式导入训练记录 设置个人训练区间\n在“设置”页面中，根据个人的功率测试或心率监测结果，设置训练区间（Zones），包括功率区间、心率区间等。此功能有助于定制个性化的训练分析。 分析训练数据\n在每次训练结束后，系统会自动生成详细的训练分析报告。你可以在“Activity”页面查看每次训练的详细图表，包括功率、心率、踏频、速度等多维度的数据分析。 监控康复与健康状况\n在“健康度”页面，你可以看到体能变化的长时间趋势，以及恢复状况。根据 TSB（训练压力平衡）值，Intervals.icu 能够帮助用户识别疲劳或即将出现的过度训练风险。 制定训练计划 添加他人分享的训练计划 点击书本图标显示训练课程库，会显示已经保存的训练课程，开始状态为空的，需要自行制定或添加。然后点击底部搜索计划，可以搜索到其他用户分享的训练计划，如果你还没有制定训练的经验，可以先添加其他人制定好的内容。下图显示了一些其他用户分享的训练计划：\n比如点击sumulige分享的训练计划后可以看到完整计划如下，点击添加到资料库，就可以在左侧的资料库中看到该计划，后续可以直接在资料库中查看\n因为打开网页时默认第一行就是当前日期，但是一般我们添加计划都是未来日期，你可以点击下图中的位置来显示未来日期，便于拖放训练计划。\n比如我想让制定的计划从01月06日开始，直接从资料库中拖动之前添加的计划到01月06日的格子里，ICU就会自动将所有训练都添加完成。\n添加完成后如图所示：\n如果你不小心拖错了日期，点击训练计划的第一个训练周六周日续时间，也就是01月06号那个训练按照以下步骤批量删除所有刚刚添加的训练：\n手动添加训练计划 如果你有自己的训练计划想要添加到ICU中，你可以逐个步骤添加，也可以通过ICU自己的语法快速添加计划。\n点击日历中的任何一个日期，使用UI按钮逐步添加：\n我更推荐使用ICU自己的语法快速添加，比如下面的训练计划：\n只需要以下的文本复制到说明文本框中即可生成训练计划：\n- Warm up 3m 110W - Active 3m 75% - Recovery 1m 55% 2x - Hard 15s 200% - Easy 1m 55% 1x - 1m 55% - 1m 65% - 1m 75% - 1m 85% - Recovery 1m 65% 10x - Hard 30s 115% - Easy 15s 65% - Recovery 4m 65% 10x - Hard 30s 115% - Easy 15s 65% - Cool Down 4m 110W\r简单总结一下语法：\n- 表示一个训练阶段 - 之后的文本是训练的描述 m 表示时间分钟 每行最后是训练强度，可以用百分比表示FTP的百分比，也可以用具体的功率值表示 x 表示重复次数 需要重复的阶段之间不能有空行，否则ICU会认为是不同的阶段 同步计划到Garmin Connect 如果你想立刻同步计划到佳明，重新勾选一下“上传计划中的训练课程”即可手动上传，注意不是点击断开连接的标识哦，不是点击断开连接的标识哦，不是点击断开连接的标识哦。\n捣鼓半天码表都不显示计划，原来是只能同步未来七天的计划。\nICU小技巧 可以直接将日历中的训练拖到资料库，也可以反向操作 在日历中找到一个训练，按住ALT拖动即可复制该训练 添加完训练计划后，可以在健康度中查看未来的健康度曲线 ","date":"2024-09-18","id":14,"permalink":"/awesome-cycling/docs/strava-garmin/intervals.icu/","summary":"Intervals.icu 网站介绍及使用指南 概述 intervals.icu 是一个专为运动员和教练设计的训练管理平台，主要服务于骑行和跑步等耐力运动。它通过深度数据分析和图表展示，帮助用户跟踪和优化训练计划、监控体能变化，并提供详细的性能分析。网站集成了多种运动数据源，能够将 Strava 等平台的数据导入并进一步分析。\n功能介绍 训练分析\n功率曲线分析：Intervals.icu 可以从功率计或智能骑行台获取数据，生成用户的功率曲线，帮助评估不同时间段的表现。 训练负荷管理（CTL/ATL/TSB）：通过计算用户的累积训练负荷（Chronic Training Load, CTL）、急性训练负荷（Acute Training Load, ATL）和训练压力平衡（Training Stress Balance, TSB），平台能够评估当前体能状况和疲劳水平，并提供调整训练的建议。 心率和功率区间管理","tags":[],"title":"intervals.icu"},{"content":"Cycling News是全球领先的自行车运动新闻网站，专注于提供各类自行车赛事的最新报道和分析，涵盖职业赛事、骑行装备、技术更新以及自行车文化。该网站是自行车爱好者、职业选手以及教练获取自行车相关信息的首选平台。\n","date":"2024-09-17","id":15,"permalink":"/awesome-cycling/docs/news-media/cyclingnews/","summary":"Cycling News是全球领先的自行车运动新闻网站，专注于提供各类自行车赛事的最新报道和分析，涵盖职业赛事、骑行装备、技术更新以及自行车文化。该网站是自行车爱好者、职业选手以及教练获取自行车相关信息的首选平台。","tags":[],"title":"CyclingNews"},{"content":"BikeForums 是一个专注于骑行的在线社区，骑行爱好者可以在这里讨论各种与自行车相关的主题。网站包含多个讨论版块，涵盖了不同类型的骑行，如公路自行车、山地车、通勤骑行等。同时，用户可以在这里分享骑行经验、维修技巧、装备推荐，甚至讨论骑行赛事和训练计划。社区成员可以通过回帖互动、提出问题或提供建议，是一个非常活跃的自行车爱好者交流平台。\n","date":"2024-09-07","id":16,"permalink":"/awesome-cycling/docs/social-forums/bikeforums/","summary":"BikeForums 是一个专注于骑行的在线社区，骑行爱好者可以在这里讨论各种与自行车相关的主题。网站包含多个讨论版块，涵盖了不同类型的骑行，如公路自行车、山地车、通勤骑行等。同时，用户可以在这里分享骑行经验、维修技巧、装备推荐，甚至讨论骑行赛事和训练计划。社区成员可以通过回帖互动、提出问题或提供建议，是一个非常活跃的自行车爱好者交流平台。","tags":[],"title":"BikeForums"},{"content":"推荐一个开源工具，Elevate for Strava，可以为 Strava 提供丰富的数据分析功能，帮助骑行爱好者和运动员更好地了解自己的运动表现。目前有Web插件、Windows APP和MacOS APP。开发者表示未来主要是提供应用软件，插件开发可能投入会减少，如果想要更快更全面体验软件功能，推荐使用Windows APP或MacOS APP。因为Web插件使用更加方便，所以我就以Web插件为例进行介绍。\n安装工具 以下是简单的安装步骤，App版本可以前往Elevate for Strava的github主页Release页面下载。\n安装扩展程序\n用户可以通过 Chrome 或 Firefox 浏览器的扩展商店搜索“Elevate for Strava”，然后点击“安装”按钮。如果你是Chrome用户，可以点击此链接直达。其他浏览器可以访问官网查看。 同步 Strava 数据\n安装完成后，用户需要登录他们的 Strava 账户，并授权 Elevate 访问其运动数据。之后，Elevate 将自动同步 Strava 数据，并开始生成各种分析报告。 配置和使用\n用户可以根据自己的需求调整 Elevate 的设置，包括单位、分析参数等选项。 使用介绍 第一次导入成功后先别着急查看数据，先配置一下个人信息，参考下图。切记基本信息和Strava保持一致，不然重新导入真的很费时间，因为Strava接口请求有限制，你可以在Strava申请导出所有数据为文件，这样会快很多，后面再详细介绍。\n查看活动汇总\n设置年度目标，计算目标进度\n你是不是也想知道自己关注的大佬功率是多少？嘿嘿，Elevate会根据大佬公开的数据，预估一个功率和工体比。以下就是范二特的一次骑行数据。\nMore Data！点击橙色的按钮，可以显示更多的数据信息，当然这些信息对于普通骑行者作用不大。对于业余车手可以通过这些数据来学习一下职业车手的骑行习惯。比如功率分配，踏频分配等等。\n","date":"2024-09-07","id":17,"permalink":"/awesome-cycling/docs/strava-garmin/elevate-for-strava/","summary":"推荐一个开源工具，Elevate for Strava，可以为 Strava 提供丰富的数据分析功能，帮助骑行爱好者和运动员更好地了解自己的运动表现。目前有Web插件、Windows APP和MacOS APP。开发者表示未来主要是提供应用软件，插件开发可能投入会减少，如果想要更快更全面体验软件功能，推荐使用Windows APP或MacOS APP。因为Web插件使用更加方便，所以我就以Web插件为例进行介绍。\n安装工具 以下是简单的安装步骤，App版本可以前往Elevate for Strava的github主页Release页面下载。\n安装扩展程序\n用户可以通过 Chrome 或 Firefox 浏览器的扩展商店搜索“Elevate for Strava”，然后点击“安装”按钮。如果你是Chrome用户，可以点击此链接直达。其他浏览器可以访问官网查看。 同步 Strava 数据","tags":[],"title":"Elevate for Strava"},{"content":"\r","date":"2024-09-07","id":18,"permalink":"/awesome-cycling/docs/race-datatracking/tour-tracker-grand-tours/","summary":"\r","tags":[],"title":"Tour Tracker Grand Tours"},{"content":"","date":"2024-09-07","id":19,"permalink":"/awesome-cycling/docs/","summary":"","tags":[],"title":"Docs"},{"content":"Link to valuable, relevant resources.\n","date":"2024-09-07","id":20,"permalink":"/awesome-cycling/docs/resources/","summary":"Link to valuable, relevant resources.","tags":[],"title":"Resources"},{"content":"","date":"2024-09-07","id":21,"permalink":"/awesome-cycling/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2024-09-07","id":22,"permalink":"/awesome-cycling/","summary":"","tags":[],"title":"Welcome to Awesome Cycling"},{"content":"","date":"0001-01-01","id":23,"permalink":"/awesome-cycling/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":24,"permalink":"/awesome-cycling/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":25,"permalink":"/awesome-cycling/tags/","summary":"","tags":[],"title":"Tags"}]